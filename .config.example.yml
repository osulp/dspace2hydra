---
# The path to a single bag to process
#bag_path: "/tmp/directory/to/single/BAG_DIRECTORY"

# The path to a directory containing multiple bags to bulk process
#bags_directory: "/tmp/directory/to/many/bags"

# Hydra server configurations for posting new works and files
hydra_endpoint:
  login:
    # The url to the login page for the Hydra app. Some authentications systems, such as CAS, will redirect
    # from this url to the authentication hosts page.
    url: "http://hydra.server/users/sign_in"
    username: "admin_user"
    password: "admin_user_password"

    # If the url is redirected to another authentication system, such as CAS, the configurations set below should be
    # relative to the form that is presented to the user for typing in their username and password.

    # The login form's ID, will default to using the first form on the page if this ID is not set.
    form_id: "new_user"
    # The name of the username/login field on the form.
    username_form_field: "user[name]"
    # The name of the password field on the form.
    password_form_field: "user[password]"

  # Configuration for a "generic_work" on Hydra.. this configuration needs modification when operating with different
  # work types, such as "Book", "ETD", "Article", etc.
  new_work:
    # The url to the page to generate a new work
    url: "http://hydra.server/concern/generic_works/new"
    # The form action used on the new work page for posting a new work. This is used as a selector to properly identify
    # which form on the page will be used for manipulation and submission.. as well as grabbing the CSRF token from it.
    form_action: "/concern/generic_works?locale=en"
    # The CSRF hidden from field name to grab and use for actions such as posting file uploads. The web UI has an AJAX
    # file upload capability that makes use of this token with posting new files to the "uploads" url.
    csrf_form_field: "authenticity_token"

  # Standard Hydra file upload url.
  uploads:
    url: "http://hydra.server/uploads"
    files_form_field: "uploaded_files[]"

# dspace bag file default configurations
bag:
  manifest_file: "manifest-md5.txt"
  bagit_file: "bagit.txt"
  tagmanifest_file: "tagmanifest-md5.txt"

  # an item is the primary thing described by the metadata and object.properties, and can contain any number of attached
  # files (itemfile) in sub-directories along with its associated metadata.
  item:
    directory: "data/"
    metadata_file: "metadata.xml"
    object_properties_file: "object.properties"

    # an itemfile is an attached file to the item, these are found in sub-directories and each file has an associated
    # metadata xml file.
    item_file:
      directory_pattern: "data/.*/"
      metadata_file_name_template: "{item_file_name}-metadata.xml"
      description_xpath: "//metadata/value[@name='description']"
      name_xpath: "//metadata/value[@name='name']"
      sequence_id_xpath: "//metadata/value[@name='sequence_id']"
      source_xpath: "//metadata/value[@name='source']"

# Example Item configuration type, with fields and field specific configuration.
#
# *Note* : qualifiers must include a `default` configuration
etd:
  creator:
    xpath: "//metadata/value[@element='creator']"
    method: Mapping::Creator.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: creator
  date:
    xpath: "//metadata/value[@element='date']"
    method: Mapping::Date.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: create_date
      accessioned:
        form_field_name: create_date
      available:
        form_field_name: date_available
      issued:
        form_field_name: date_issued
  degree:
    xpath: "//metadata/value[@element='degree']"
    method:
      - Mapping::Degree.remapped_field_split
      - degree_name
      - degree_field
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: degree_name
      name:
        form_field_name: degree_name
  description:
    xpath: "//metadata/value[@element='description']"
    method: Mapping::Description.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: description
      peerreview:
        form_field_name: additional_information
        # example method with optional argument(s)
        method:
          - Mapping::Description.prepend
          - 'description.peerreview : '
      peerreviewnotes:
        form_field_name: description
      provenance:
        form_field_name: description
      tableofcontents:
        form_field_name: description
  identifier:
    xpath: "//metadata/value[@element='identifier']"
    method: Mapping::Identifier.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: identifier
      citation:
        form_field_name: citation
      isbn:
        form_field_name: isbn
      uri:
        form_field_name: uri
  language:
    xpath: "//metadata/value[@element='language']"
    method: Mapping::Language.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: language
      iso:
        form_field_name: language
  publisher:
    xpath: "//metadata/value[@element='publisher']"
    method: Mapping::Publisher.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: publisher
  rights:
    xpath: "//metadata/value[@element='rights']"
    method: Mapping::Rights.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: rights
      uri:
        form_field_name: rights
  subject:
    xpath: "//metadata/value[@element='subject']"
    method: Mapping::Subject.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: subject
  title:
    xpath: "//metadata/value[@element='title']"
    method: Mapping::Title.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: title
  type:
    xpath: "//metadata/value[@element='type']"
    method: Mapping::Type.unprocessed
    form_field: "generic_work[%{form_field_name}][]"
    qualifiers:
      default:
        form_field_name: resource_type

---
# ETD Hyrax work type
work_type: "default_work"

# Default AdminSet.id, or "" to use Hyrax "Default Admin Set"
admin_set_id: ""

upload_data:
  - directory: ORIGINAL
    ignore_files:
uploaded_files_form_field: "uploaded_files[]"

# Add this value to the migration data
# (DEFAULT) 'always' : always add this value to the migration data
# 'except_empty_value' : add this value except for empty/nil
# 'if_form_field_value_missing' : add the value if the form_field doesn't have an existing value
# 'never' : do not add this value to the migration data
# 'except_empty_value' : add the value unless it is empty or nil, in which case ignore it
value_add_to_migration: except_empty_value

# When operating on a node, grab the value from its property. The property would likely
# be pulling from the configuration and/or value passed to a commandline arg.
# (DEFAULT) : Don't use a node property, use the standard value from CustomNode or Qualifier behavior
# (EXAMPLE) admin_set_id : A CustomNode may get the AdminSet ID provided in configuration or overridden on the commandline
value_from_node_property: ''

# Custom metadata nodes to add to the data payload posted to the server
custom_nodes:
  admin_set:
    form_field: "%{work_type}[%{form_field_name}]"
    form_field_name: admin_set_id
    method: Mapping::AdminSet.unprocessed
    value_from_node_property: admin_set_id
  agreement:
    form_field: "%{form_field_name}"
    form_field_name: agreement
    method: Mapping::Agreement.unprocessed
    value: 1
  keyword:
    form_field: "%{work_type}[%{form_field_name}][]"
    form_field_name: keyword
    method: Mapping::Keyword.unprocessed
    value: data-migration
  rights:
    form_field: "%{work_type}[%{form_field_name}][]"
    form_field_name: rights
    method: Mapping::Rights.unprocessed
    value: "http://rightsstatements.org/vocab/CNE/1.0/"
    value_add_to_migration: if_form_field_value_missing
  visibility:
    form_field: "%{work_type}[%{form_field_name}]"
    form_field_name: visibility
    method: Mapping::Visibility.unprocessed
    value: open

# Migration metadata nodes extract data from the DSpace Item metadata.xml and do some
# lookup/cleanup/mapping before posting to the server.
migration_nodes:
  creator:
    xpath: "//metadata/value[@element='creator']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Creator.unprocessed
    qualifiers:
      default:
        form_field_name: creator
  date:
    xpath: "//metadata/value[@element='date']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Date.unprocessed
    qualifiers:
      default:
        form_field_name: date_created
      accessioned:
        form_field_name: date_issued
      available:
        form_field_name: date_available
      issued:
        form_field_name: date_issued
      updated:
        form_field_name: date_updated
      copyright:
        form_field_name: date_copyright
  description:
    xpath: "//metadata/value[@element='description']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Description.unprocessed
    qualifiers:
      default:
        form_field_name: description
      abstract:
        form_field_name: description
      digitization:
        form_field_name: digitization_spec
      embargo:
        form_field_name: visibility
        method:
          # set visibility to 'embargo' and embargo_release_date to the value from the node
          - Mapping::Description.set_embargo
          - visibility
          - embargo_release_date
      embargopolicy:
        form_field_name: visibility_during_embargo
        method:
          # set embargo policy during and after embargo
          - Mapping::Description.lookup_embargo_policy
          - visibility_during_embargo
          - visibility_after_embargo
      peerreview:
        form_field_name: peerreviewed
      peerreviewnotes:
        form_field_name: additional_information
        method:
          - Mapping::Description.prepend
          - 'description.peerreviewnotes : '
      provenance:
        form_field_name: additional_information
        method:
          - Mapping::Description.prepend
          - 'description.provenance : '
      sponsorship:
        form_field_name: funding_statement
      tableofcontents:
        form_field_name: tableofcontents
  identifier:
    xpath: "//metadata/value[@element='identifier']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Identifier.unprocessed
    qualifiers:
      default:
        form_field_name: identifier_uri
      citation:
        form_field_name: bibliographic_citation
      isbn:
        form_field_name: isbn
      uri:
        form_field_name: identifier_uri
      doi:
        form_field_name: doi
  language:
    xpath: "//metadata/value[@element='language']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Language.unprocessed
    qualifiers:
      default:
        form_field_name: language
      iso:
        form_field_name: language
        method: Mapping::Language.uri
  publisher:
    xpath: "//metadata/value[@element='publisher']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Publisher.unprocessed
    qualifiers:
      default:
        form_field_name: publisher
  relation:
    xpath: "//metadata/value[@element='relation']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Relation.unprocessed
    qualifiers:
      default:
        form_field_name: relation
      ispartofseries:
        form_field_name: in_series
  rights:
    xpath: "//metadata/value[@element='rights']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Rights.unprocessed
    qualifiers:
      default:
        form_field_name: rights
        method: Mapping::Rights.ignored
      uri:
        form_field_name: rights
  subject:
    xpath: "//metadata/value[@element='subject']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Subject.unprocessed
    qualifiers:
      default:
        form_field_name: keyword
      lcsh:
        form_field_name: subject
        method: Mapping::Subject.uri
  title:
    xpath: "//metadata/value[@element='title']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Title.unprocessed
    qualifiers:
      default:
        form_field_name: title
      alternative:
        form_field_name: alt_title
  format:
    xpath: "//metadata/value[@element='format']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::format.unprocessed
    qualifiers:
      default:
        form_field_name: file_format
      extent:
        form_field_name: file_extent
      mimetype:
        form_field_name: file_format
  type:
    xpath: "//metadata/value[@element='type']"
    form_field: "%{work_type}[%{form_field_name}][]"
    method: Mapping::Type.unprocessed
    qualifiers:
      default:
        form_field_name: resource_type
